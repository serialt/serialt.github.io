<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Blog</title>
        <link>https://serialt.github.io/posts/</link>
        <description>All Posts | Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>tserialt@gmail.com (serialt)</managingEditor>
            <webMaster>tserialt@gmail.com (serialt)</webMaster><lastBuildDate>Mon, 29 Jan 2024 20:26:27 &#43;0800</lastBuildDate><atom:link href="https://serialt.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>ktconnect</title>
    <link>https://serialt.github.io/posts/2024-01-29-ktconnect/</link>
    <pubDate>Mon, 29 Jan 2024 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2024-01-29-ktconnect/</guid>
    <description><![CDATA[KtConnect 官方文档：https://alibaba.github.io/kt-connect/#/zh-cn/guide/quickstart 简单示]]></description>
</item>
<item>
    <title>Alpine vm</title>
    <link>https://serialt.github.io/posts/2024-01-22-alpine-vm/</link>
    <pubDate>Mon, 22 Jan 2024 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2024-01-22-alpine-vm/</guid>
    <description><![CDATA[alpine 虚拟机安装 使用alpine-vm iso 文件进行安装 参考文档： https://www.qunniao.net/1408.html https://wener.me/notes/os/alpine/intro https://blog.xiaohack.org/4674.html https://tonylee.name/Alpine-Linux-4f1cbdb482754c65a61e7f08e9691234 关闭交换分区减小镜像大小： vi /sbin/setup-alpine # 在 setup-disk 增加参数关闭交换分区 setup-disk -s 0 alpine 3.19 镜像可以]]></description>
</item>
<item>
    <title>Python Cert</title>
    <link>https://serialt.github.io/posts/2024-01-15-python-cert/</link>
    <pubDate>Tue, 16 Jan 2024 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2024-01-15-python-cert/</guid>
    <description><![CDATA[Python 自签名证书 mozilla 维护者一个公共ca的文件，在使用http客户端使用自签名证书的时候可以把对应的文件合并然后再导入，示例代码： requirements.txt certifi==2023.11.17 urllib3==2.1.0 #!/usr/bin/env python3 # coding=utf-8 # ***********************************************************************]]></description>
</item>
<item>
    <title>Terraform Registry</title>
    <link>https://serialt.github.io/posts/2024-01-14-terraform-registry/</link>
    <pubDate>Sun, 14 Jan 2024 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2024-01-14-terraform-registry/</guid>
    <description><![CDATA[Terraform Registry 一、Registry 协议 文档地址：https://developer.hashicorp.com/terraform/internals]]></description>
</item>
<item>
    <title>Vault</title>
    <link>https://serialt.github.io/posts/2024-01-07-vault/</link>
    <pubDate>Sun, 07 Jan 2024 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2024-01-07-vault/</guid>
    <description><![CDATA[Vault 参考链接：https://thiscute.world/posts/experience-of-vault/#%E4%B8%80vault]]></description>
</item>
<item>
    <title>SQL Server</title>
    <link>https://serialt.github.io/posts/2023-12-27-mssql/</link>
    <pubDate>Wed, 27 Dec 2023 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-12-27-mssql/</guid>
    <description><![CDATA[SQL Server docker run -e &#34;ACCEPT_EULA=Y&#34; -e &#34;SA_PASSWORD=Y.sa123456&#34; -p 1433:1433 --name mssql2022 -d mcr.microsoft.com/mssql/server:2022-latest 其中 sa123456 为 SQL Server sa 用户的密码，SA_PASSWORD=Y.sa123456 为密码，要求是最少8位的强密码，要有大写字]]></description>
</item>
<item>
    <title>k3s</title>
    <link>https://serialt.github.io/posts/2023-12-16-k3s/</link>
    <pubDate>Sat, 16 Dec 2023 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-12-16-k3s/</guid>
    <description><![CDATA[k3s 参考链接： https://www.escapelife.site/posts/754ba85c.html 一、简介 K3s 是一个轻量级的 Kubernetes 发行版，它针对边缘计算、物联网等场景进行了高度优化。 CNCF 认证的 Kubernetes 发行版 支持 X86_64, ARM64, ARMv7 平台 单一进程包含 Kubernetes ma]]></description>
</item>
<item>
    <title>Ansible handbook</title>
    <link>https://serialt.github.io/posts/2023-12-4-ansible-handbook/</link>
    <pubDate>Mon, 04 Dec 2023 20:28:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-12-4-ansible-handbook/</guid>
    <description><![CDATA[Ansible handbook 一、ansible配置 1、ansible.cfg https://ansible-tran.readthedocs.io/en/latest/docs/intro_configuration.html * ANSIBLE_CONFIG (一个环境变量) * ansible.cfg (位于当前目录中) * .ansible.cfg (位于家目录中) * /etc/ansible/ansible.cfg 生成ansible的]]></description>
</item>
<item>
    <title>Gitlab</title>
    <link>https://serialt.github.io/posts/2023-12-4-gitlab/</link>
    <pubDate>Mon, 04 Dec 2023 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-12-4-gitlab/</guid>
    <description><![CDATA[Gitlab 版本介绍 gitlab分社区版和企业版，与其他企业版软件不同的是，社区版和企业版都不收费，都可以免费使用 官方文档：https://docs.]]></description>
</item>
<item>
    <title>Gitlab</title>
    <link>https://serialt.github.io/posts/2023-12-7-dev-terraform-provider/</link>
    <pubDate>Mon, 04 Dec 2023 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-12-7-dev-terraform-provider/</guid>
    <description><![CDATA[Dev terraform provider 基于新框架tpf开发 main.go func main() { var debug bool flag.BoolVar(&amp;debug, &#34;debug&#34;, false, &#34;debug terraform provider&#34;) flag.Parse() opts := providerserver.ServeOpts{ Address: &#34;hashicorp.com/edu/hashicups&#34;, Debug: debug, } err := providerserver.Serve(context.Background(), provider.New(version), opts) if err != nil { log.Fatal(err.Error()) } } provider.go package provider import ( &#34;context&#34; &#34;github.com/hashicorp/terraform-plugin-framework/datasource&#34; &#34;github.com/hashicorp/terraform-plugin-framework/provider&#34; &#34;github.com/hashicorp/terraform-plugin-framework/provider/schema&#34; &#34;github.com/hashicorp/terraform-plugin-framework/resource&#34; ) var ( _ provider.Provider = &amp;hashicupsProvider{} ) func New(version string) func()]]></description>
</item>
</channel>
</rss>
