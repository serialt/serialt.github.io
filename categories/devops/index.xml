<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>DevOps - Category - Blog</title>
        <link>https://serialt.github.io/categories/devops/</link>
        <description>DevOps - Category - Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>tserialt@gmail.com (serialt)</managingEditor>
            <webMaster>tserialt@gmail.com (serialt)</webMaster><lastBuildDate>Tue, 16 Jan 2024 20:26:27 &#43;0800</lastBuildDate><atom:link href="https://serialt.github.io/categories/devops/" rel="self" type="application/rss+xml" /><item>
    <title>Python Cert</title>
    <link>https://serialt.github.io/posts/2024-01-15-python-cert/</link>
    <pubDate>Tue, 16 Jan 2024 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2024-01-15-python-cert/</guid>
    <description><![CDATA[Python 自签名证书 mozilla 维护者一个公共ca的文件，在使用http客户端使用自签名证书的时候可以把对应的文件合并然后再导入，示例代码： requirements.txt certifi==2023.11.17 urllib3==2.1.0 #!/usr/bin/env python3 # coding=utf-8 # ***********************************************************************]]></description>
</item>
<item>
    <title>Terraform Registry</title>
    <link>https://serialt.github.io/posts/2024-01-14-terraform-registry/</link>
    <pubDate>Sun, 14 Jan 2024 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2024-01-14-terraform-registry/</guid>
    <description><![CDATA[Terraform Registry 一、Registry 协议 文档地址：https://developer.hashicorp.com/terraform/internals]]></description>
</item>
<item>
    <title>Vault</title>
    <link>https://serialt.github.io/posts/2024-01-07-vault/</link>
    <pubDate>Sun, 07 Jan 2024 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2024-01-07-vault/</guid>
    <description><![CDATA[Vault 参考链接：https://thiscute.world/posts/experience-of-vault/#%E4%B8%80vault]]></description>
</item>
<item>
    <title>k3s</title>
    <link>https://serialt.github.io/posts/2023-12-16-k3s/</link>
    <pubDate>Sat, 16 Dec 2023 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-12-16-k3s/</guid>
    <description><![CDATA[k3s 参考链接： https://www.escapelife.site/posts/754ba85c.html 一、简介 K3s 是一个轻量级的 Kubernetes 发行版，它针对边缘计算、物联网等场景进行了高度优化。 CNCF 认证的 Kubernetes 发行版 支持 X86_64, ARM64, ARMv7 平台 单一进程包含 Kubernetes ma]]></description>
</item>
<item>
    <title>Ansible handbook</title>
    <link>https://serialt.github.io/posts/2023-12-4-ansible-handbook/</link>
    <pubDate>Mon, 04 Dec 2023 20:28:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-12-4-ansible-handbook/</guid>
    <description><![CDATA[Ansible handbook 一、ansible配置 1、ansible.cfg https://ansible-tran.readthedocs.io/en/latest/docs/intro_configuration.html * ANSIBLE_CONFIG (一个环境变量) * ansible.cfg (位于当前目录中) * .ansible.cfg (位于家目录中) * /etc/ansible/ansible.cfg 生成ansible的]]></description>
</item>
<item>
    <title>Gitlab</title>
    <link>https://serialt.github.io/posts/2023-12-4-gitlab/</link>
    <pubDate>Mon, 04 Dec 2023 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-12-4-gitlab/</guid>
    <description><![CDATA[Gitlab 版本介绍 gitlab分社区版和企业版，与其他企业版软件不同的是，社区版和企业版都不收费，都可以免费使用 官方文档：https://docs.]]></description>
</item>
<item>
    <title>Gitlab</title>
    <link>https://serialt.github.io/posts/2023-12-7-dev-terraform-provider/</link>
    <pubDate>Mon, 04 Dec 2023 20:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-12-7-dev-terraform-provider/</guid>
    <description><![CDATA[Dev terraform provider 基于新框架tpf开发 main.go func main() { var debug bool flag.BoolVar(&amp;debug, &#34;debug&#34;, false, &#34;debug terraform provider&#34;) flag.Parse() opts := providerserver.ServeOpts{ Address: &#34;hashicorp.com/edu/hashicups&#34;, Debug: debug, } err := providerserver.Serve(context.Background(), provider.New(version), opts) if err != nil { log.Fatal(err.Error()) } } provider.go package provider import ( &#34;context&#34; &#34;github.com/hashicorp/terraform-plugin-framework/datasource&#34; &#34;github.com/hashicorp/terraform-plugin-framework/provider&#34; &#34;github.com/hashicorp/terraform-plugin-framework/provider/schema&#34; &#34;github.com/hashicorp/terraform-plugin-framework/resource&#34; ) var ( _ provider.Provider = &amp;hashicupsProvider{} ) func New(version string) func()]]></description>
</item>
<item>
    <title>Gorm gen</title>
    <link>https://serialt.github.io/posts/2023-11-28-gorm-gen/</link>
    <pubDate>Tue, 28 Nov 2023 20:22:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-28-gorm-gen/</guid>
    <description><![CDATA[Gorm gen 参考链接： https://nickxu.me/2023/03/29/GORM%E7%9A%84GEN%E6%A8%A1%E5%BC%8F%E5%88%9D%E4%B8%8A%E6%89%8B/ https://www.liwenzhou.com/posts/Go/gen/ 示例代码： https://github.com/serialt/genc Gen是一个基于GORM的安全ORM框架，其主要通过代码生成方式实现GORM代码封装。使用Gen框架能够自动生]]></description>
</item>
<item>
    <title>Shell handbook</title>
    <link>https://serialt.github.io/posts/2023-11-24-shell-handbook/</link>
    <pubDate>Fri, 24 Nov 2023 20:22:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-24-shell-handbook/</guid>
    <description><![CDATA[Shell handbok 一、特殊符号 参考链接: https://blog.csdn.net/jiezi2016/article/details/79649382 https://blog.csdn.net/wangzhaotongalex/article/details/73321766 介绍下Shell中的${}、##和%%使用范例，本文给出了不同情况下得到的结果。 假设定义了一个变量为： 代码如下]]></description>
</item>
<item>
    <title>switch-case handbook</title>
    <link>https://serialt.github.io/posts/2023-11-24-switch-case/</link>
    <pubDate>Fri, 24 Nov 2023 20:22:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-24-switch-case/</guid>
    <description><![CDATA[switch-case语法 shell 语法 case 变量 in 取值1) 操作语句 操作语句 ;; 取值2) 操作语句 操作语句 ;; 取值3) 操作语句 操作语句 ;; *) 操作语句 操作语句 ;; esac]]></description>
</item>
</channel>
</rss>
