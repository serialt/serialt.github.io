<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>DevOps - Category - Blog</title>
        <link>https://serialt.github.io/categories/devops/</link>
        <description>DevOps - Category - Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>tserialt@gmail.com (serialt)</managingEditor>
            <webMaster>tserialt@gmail.com (serialt)</webMaster><lastBuildDate>Tue, 28 Nov 2023 20:22:27 &#43;0800</lastBuildDate><atom:link href="https://serialt.github.io/categories/devops/" rel="self" type="application/rss+xml" /><item>
    <title>Gorm gen</title>
    <link>https://serialt.github.io/posts/2023-11-28-gorm-gen/</link>
    <pubDate>Tue, 28 Nov 2023 20:22:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-28-gorm-gen/</guid>
    <description><![CDATA[Gorm gen 参考链接： https://nickxu.me/2023/03/29/GORM%E7%9A%84GEN%E6%A8%A1%E5%BC%8F%E5%88%9D%E4%B8%8A%E6%89%8B/ https://www.liwenzhou.com/posts/Go/gen/ 示例代码： https://github.com/serialt/genc Gen是一个基于GORM的安全ORM框架，其主要通过代码生成方式实现GORM代码封装。使用Gen框架能够自动生]]></description>
</item>
<item>
    <title>Shell handbook</title>
    <link>https://serialt.github.io/posts/2023-11-24-shell-handbook/</link>
    <pubDate>Fri, 24 Nov 2023 20:22:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-24-shell-handbook/</guid>
    <description><![CDATA[Shell handbok 一、特殊符号 参考链接: https://blog.csdn.net/jiezi2016/article/details/79649382 https://blog.csdn.net/wangzhaotongalex/article/details/73321766 介绍下Shell中的${}、##和%%使用范例，本文给出了不同情况下得到的结果。 假设定义了一个变量为： 代码如下]]></description>
</item>
<item>
    <title>switch-case handbook</title>
    <link>https://serialt.github.io/posts/2023-11-24-switch-case/</link>
    <pubDate>Fri, 24 Nov 2023 20:22:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-24-switch-case/</guid>
    <description><![CDATA[switch-case语法 shell 语法 case 变量 in 取值1) 操作语句 操作语句 ;; 取值2) 操作语句 操作语句 ;; 取值3) 操作语句 操作语句 ;; *) 操作语句 操作语句 ;; esac]]></description>
</item>
<item>
    <title>Python ansible module</title>
    <link>https://serialt.github.io/posts/2023-11-22-python-ansible-module/</link>
    <pubDate>Wed, 22 Nov 2023 21:22:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-22-python-ansible-module/</guid>
    <description><![CDATA[Ansible Module 参考链接：https://ansible.leops.cn/dev/modules/ 1、自定义模块开发 该模块的目的是在远程主机上将远程源]]></description>
</item>
<item>
    <title>Python basic</title>
    <link>https://serialt.github.io/posts/2023-11-22-python-basic/</link>
    <pubDate>Wed, 22 Nov 2023 21:22:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-22-python-basic/</guid>
    <description><![CDATA[Python 基础 一、基础语法 1、输出语句的使用 1）引号的使用 &gt;&gt;&gt; print (&#39;hello world&#39;) hello world &gt;&gt;&gt; print (&#34;hello world&#34;) hello world &gt;&gt;&gt; 2）三引号: 输出多行内容 &gt;&gt;&gt; print (&#34;&#34;&#34;abc ... cdc ... ddd ... ccc ... fff&#34;&#34;&#34;) abc cdc ddd ccc fff 注释符：]]></description>
</item>
<item>
    <title>Terraform handbook</title>
    <link>https://serialt.github.io/posts/2023-11-22-terraform-handbook/</link>
    <pubDate>Wed, 22 Nov 2023 21:22:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-22-terraform-handbook/</guid>
    <description><![CDATA[Terraform handbook 参考链接：https://blog.gmem.cc/terraform 一、简介 Terraform用于实现基础设施即代码（infrastr]]></description>
</item>
<item>
    <title>Timezone</title>
    <link>https://serialt.github.io/posts/2023-11-20-timezone/</link>
    <pubDate>Mon, 20 Nov 2023 21:22:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-20-timezone/</guid>
    <description><![CDATA[Timezone 参考链接： https://bbs.huaweicloud.com/blogs/detail/243151 http://www.timeofdate.com/timezone/abbr/all 一、设置时区 timedatectl set-timezone Asia/Shanghai 二、时区详细 1、概念 ​ 在以前全球国家都处于农业社会的时候，人们通过每天观察太阳的位置来决定时间，这就使得不]]></description>
</item>
<item>
    <title>Git-to-use</title>
    <link>https://serialt.github.io/posts/2023-11-19-git-to-use/</link>
    <pubDate>Sun, 19 Nov 2023 11:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-19-git-to-use/</guid>
    <description><![CDATA[Git使用规范 一、commit &lt;type&gt;(scope): &lt;subject&gt; Header &lt;BLANK LINE&gt; &lt;body&gt; Body &lt;BALNK LINE&gt; &lt;footer&gt; Footer commit message包含Header、Body、Footer三个部分，其中Header是必须]]></description>
</item>
<item>
    <title>svn</title>
    <link>https://serialt.github.io/posts/2023-11-18-svn/</link>
    <pubDate>Sat, 18 Nov 2023 11:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-18-svn/</guid>
    <description><![CDATA[SVN 介绍： 代码版本管理工具 能记住本版修改的情况 查看所有的修改记录 恢复到任何历史版本 恢复已经删除的文件 svn与git相比的优势: 使用简单、上手快]]></description>
</item>
<item>
    <title>Git</title>
    <link>https://serialt.github.io/posts/2023-11-18-git/</link>
    <pubDate>Sat, 18 Nov 2023 10:26:27 &#43;0800</pubDate>
    <author>serialt</author>
    <guid>https://serialt.github.io/posts/2023-11-18-git/</guid>
    <description><![CDATA[Git 一、git基本使用 1、commit [root@node01 project]# git add 1.txt [root@node01 project]# git commit -m &#34;create new 1.txt&#34; [master (root-commit) 3e8ce87] create new 1.txt 1 file changed, 0 insertions(+), 0 deletions(-) create mode 100644 1.txt 2、diff文件 [root@node01 project]# git diff 1.txt diff --git a/1.txt b/1.txt index e69de29..21d56a0 100644 --- a/1.txt]]></description>
</item>
</channel>
</rss>
